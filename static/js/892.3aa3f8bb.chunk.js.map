{"version":3,"file":"static/js/892.3aa3f8bb.chunk.js","mappings":"8QAAaA,EAAoB,SAAAC,GAAK,OAAIA,EAAMC,UAAUC,SAASC,KAA7B,EAIzBC,EAAyB,SAAAJ,GAAK,OAAIA,EAAMC,UAAUC,SAASG,SAA7B,EAE9BC,EAAc,SAAAN,GAAK,OAAIA,EAAMC,UAAUC,SAASK,KAA7B,EAEnBC,EAA4B,SAAAR,GAAK,OAC5CA,EAAMC,UAAUC,SAASC,MAAMM,QAAO,SAAAC,GAAO,OAC3CA,EAAQC,KAAKC,cAAcC,SAASb,EAAMC,UAAUQ,OAAOG,cADhB,GADD,E,kBCLjCE,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,+JASVE,EAAYF,EAAAA,EAAAA,EAAH,qDAKTG,EAAQH,EAAAA,EAAAA,MAAH,yEAMLI,EAASJ,EAAAA,EAAAA,OAAH,6C,UCfbK,GAAKC,EAAAA,EAAAA,MAEEC,EAAc,WACzB,IAAMpB,GAAWqB,EAAAA,EAAAA,IAAYC,GACvBC,GAAWC,EAAAA,EAAAA,MAOXC,GAASC,EAAAA,EAAAA,IAAO,CACpBjB,MAAMkB,EAAAA,EAAAA,MAASC,WACfC,QAAQF,EAAAA,EAAAA,MAASC,aAGbE,EAAY,SAAC,GAAc,IAAZrB,EAAW,EAAXA,KACnB,OACE,SAAC,KAAD,CACEA,KAAMA,EACNsB,OAAQ,SAAAC,GAAO,OAAI,SAACjB,EAAD,UAAYiB,GAAhB,GAGpB,EAgBD,OACE,+BACE,SAAC,KAAD,CACEC,cApCgB,CACpBxB,KAAM,GACNoB,OAAQ,IAmCJK,SAlBe,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACNpC,EAASqC,MAC/B,SAAA7B,GAAO,OAAIA,EAAQC,OAAS0B,EAAO1B,IAA5B,IAIL6B,EAAAA,GAAAA,MAAA,UAAeH,EAAO1B,KAAtB,2BAAqD,CACnD8B,SAAU,eAEZhB,EAASiB,EAAAA,WAA+BL,IAE5CC,GACD,EAOKK,iBAAkBhB,EAHpB,UAKE,UAACb,EAAD,YACE,SAACI,EAAD,CAAO0B,QAASxB,EAAhB,mBACA,SAAC,KAAD,CACEA,GAAIA,EACJyB,KAAK,OACLlC,KAAK,OACLmC,MAAM,yIACNhB,UAAQ,KAEV,SAACE,EAAD,CAAWrB,KAAK,UAChB,SAACO,EAAD,CAAO0B,QAASxB,EAAhB,qBACA,SAAC,KAAD,CACEA,GAAIA,EACJyB,KAAK,MACLlC,KAAK,SACLmC,MAAM,+FACNhB,UAAQ,KAEV,SAACE,EAAD,CAAWrB,KAAK,YAChB,SAACQ,EAAD,CAAQ0B,KAAK,SAAb,+BAKT,E,mBC5EYE,EAAchC,EAAAA,EAAAA,EAAH,6CAIXiC,EAAejC,EAAAA,EAAAA,EAAH,6CAIZI,EAASJ,EAAAA,EAAAA,OAAH,qECJNkC,EAAU,SAAC,GAAwB,IAAtBvC,EAAqB,EAArBA,QAASwC,EAAY,EAAZA,MAC3B7C,GAAYkB,EAAAA,EAAAA,IAAYnB,GACxBqB,GAAWC,EAAAA,EAAAA,MAEjB,OACE,iCACE,UAACqB,EAAD,WACGG,EAAQ,EADX,KACgBxC,EAAQC,KADxB,QAGA,SAACqC,EAAD,UAAetC,EAAQqB,UACvB,SAAC,EAAD,CACEoB,QAAS,kBAAM1B,GAAS2B,EAAAA,EAAAA,eAAc1C,EAAQU,IAArC,EACTiC,SAAUhD,EAFZ,SAIGA,GAAY,SAACiD,EAAA,EAAD,IAAa,aAIjC,ECtBYC,EAAOxC,EAAAA,EAAAA,GAAH,iGAMJyC,EAAWzC,EAAAA,EAAAA,GAAH,uECAR0C,EAAe,WAC1B,IAAMhC,GAAWC,EAAAA,EAAAA,MACXrB,GAAYkB,EAAAA,EAAAA,IAAYC,GACxBkC,GAAUnC,EAAAA,EAAAA,IAAYC,GACtBmC,GAAsBpC,EAAAA,EAAAA,IAC1BC,GAOF,OAJAoC,EAAAA,EAAAA,YAAU,WACRnC,EAASiB,EAAAA,gBACV,GAAE,CAACjB,IAEApB,GACK,SAACiD,EAAA,EAAD,IAGLI,EACKlB,EAAAA,GAAAA,MAAY,yCAA0C,CAC3DC,SAAU,aACVoB,UAAW,OAKb,8BACGF,IACC,UAACJ,EAAD,WACGO,QAAuC,IAA/BH,EAAoBI,UAC3B,+CAEDJ,EAAoBK,KAAI,SAACtD,EAASwC,GAAV,OACvB,SAACM,EAAD,WACE,SAACP,EAAD,CAASvC,QAASA,EAASwC,MAAOA,KADrBxC,EAAQU,GADA,QASlC,E,UC7CY6C,EAAgBlD,EAAAA,EAAAA,IAAH,4FCGpBK,GAAKC,EAAAA,EAAAA,MACP6C,EAAa,KAEJC,EAAiB,WAC5B,IAAM1C,GAAWC,EAAAA,EAAAA,MAOjB,OACE,UAACuC,EAAD,YACE,kBAAOrB,QAASxB,EAAhB,oCACA,kBAAOA,GAAIA,EAAIyB,KAAK,OAAOuB,SARV,SAAAC,GACnBH,EAAaG,EAAEC,cAAcC,MAC7B9C,GAAS+C,EAAAA,EAAAA,GAAYN,GACtB,MAQF,ECLD,EAbsB,WACpB,OACE,iCACE,uCACA,SAAC5C,EAAD,KAEA,sCACA,SAAC6C,EAAD,KACA,SAACV,EAAD,MAGL,C","sources":["redux/phonebook/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/Contact/Contact.styled.js","components/Contact/Contact.js","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.js","components/ContactsFilter/ContactsFilter.styled.js","components/ContactsFilter/ContactsFilter.js","pages/PhonebookPage.js"],"sourcesContent":["export const selectAllContacts = state => state.phonebook.contacts.items;\n\nexport const selectFilter = state => state.phonebook.filter;\n\nexport const selectPhonebookLoading = state => state.phonebook.contacts.isLoading;\n\nexport const selectError = state => state.phonebook.contacts.error;\n\nexport const selectFilteredOutContacts = state =>\n  state.phonebook.contacts.items.filter(contact =>\n    contact.name.toLowerCase().includes(state.phonebook.filter.toLowerCase())\n  );\n","import styled from '@emotion/styled';\nimport { Form } from 'formik';\n\nexport const FormStyled = styled(Form)`\n  border: 1px solid black;\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  max-width: 300px;\n  padding: 20px;\n`;\n\nexport const ErrorText = styled.p`\n  color: red;\n  margin: 0;\n`;\n\nexport const Label = styled.label`\n  :nth-of-type(2) {\n    margin-top: 10px;\n  }\n`;\n\nexport const Button = styled.button`\n  margin-top: 20px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Field, ErrorMessage } from 'formik';\nimport { string, object } from 'yup';\nimport { nanoid } from 'nanoid';\nimport { toast } from 'react-toastify';\nimport { phonebookOperations, phonebookSelectors } from 'redux/phonebook';\nimport { FormStyled, ErrorText, Label, Button } from './ContactForm.styled';\n\nconst id = nanoid();\n\nexport const ContactForm = () => {\n  const contacts = useSelector(phonebookSelectors.selectAllContacts);\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    name: '',\n    number: '',\n  };\n\n  const schema = object({\n    name: string().required(),\n    number: string().required(),\n  });\n\n  const FormError = ({ name }) => {\n    return (\n      <ErrorMessage\n        name={name}\n        render={message => <ErrorText>{message}</ErrorText>}\n      />\n    );\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    const isContactExists = contacts.some(\n      contact => contact.name === values.name\n    );\n\n    isContactExists\n      ? toast.error(`${values.name} is already in contacts`, {\n          position: 'top-center',\n        })\n      : dispatch(phonebookOperations.addContact(values));\n\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        <FormStyled>\n          <Label htmlFor={id}>Name</Label>\n          <Field\n            id={id}\n            type=\"text\"\n            name=\"name\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <FormError name=\"name\" />\n          <Label htmlFor={id}>Number</Label>\n          <Field\n            id={id}\n            type=\"tel\"\n            name=\"number\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n          <FormError name=\"number\" />\n          <Button type=\"submit\">Add contact</Button>\n        </FormStyled>\n      </Formik>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ContactName = styled.p`\n  min-width: 250px;\n`;\n\nexport const ContactPhone = styled.p`\n  min-width: 180px;\n`;\n\nexport const Button = styled.button`\n  :hover {\n    background-color: red;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectPhonebookLoading } from 'redux/phonebook/selectors';\nimport { deleteContact } from 'redux/phonebook/operations';\nimport { Spiner } from 'components/Spiner/Spiner';\nimport { ContactName, ContactPhone, Button } from './Contact.styled';\n\nexport const Contact = ({ contact, index }) => {\n  const isLoading = useSelector(selectPhonebookLoading);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <ContactName>\n        {index + 1}. {contact.name}:\n      </ContactName>\n      <ContactPhone>{contact.number}</ContactPhone>\n      <Button\n        onClick={() => dispatch(deleteContact(contact.id))}\n        disabled={isLoading}\n      >\n        {isLoading ? <Spiner /> : 'Delete'}\n      </Button>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: inline-flex;\n  flex-direction: column;\n  margin-top: 20px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  border-bottom: 1px solid;\n`;\n","import { toast } from 'react-toastify';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { phonebookOperations, phonebookSelectors } from 'redux/phonebook';\nimport { Contact } from 'components/Contact/Contact';\nimport { Spiner } from 'components/Spiner/Spiner';\nimport { List, ListItem } from './ContactsList.styled';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(phonebookSelectors.selectPhonebookLoading);\n  const isError = useSelector(phonebookSelectors.selectError);\n  const filteredOutContacts = useSelector(\n    phonebookSelectors.selectFilteredOutContacts\n  );\n\n  useEffect(() => {\n    dispatch(phonebookOperations.fetchContacts());\n  }, [dispatch]);\n\n  if (isLoading) {\n    return <Spiner />;\n  }\n\n  if (isError) {\n    return toast.error('Error occurred while fetching contacts', {\n      position: 'top-center',\n      autoClose: 2000,\n    });\n  }\n\n  return (\n    <>\n      {filteredOutContacts && (\n        <List>\n          {Boolean(filteredOutContacts.length === 0) && (\n            <h3>No contacts found.</h3>\n          )}\n          {filteredOutContacts.map((contact, index) => (\n            <ListItem key={contact.id}>\n              <Contact contact={contact} index={index} />\n            </ListItem>\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FilterWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n`;\n","import { findContact } from 'redux/phonebook/slice';\nimport { useDispatch } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { FilterWrapper } from './ContactsFilter.styled';\n\nconst id = nanoid();\nlet inputValue = null;\n\nexport const ContactsFilter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilter = e => {\n    inputValue = e.currentTarget.value;\n    dispatch(findContact(inputValue));\n  };\n\n  return (\n    <FilterWrapper>\n      <label htmlFor={id}>Find contacts by name</label>\n      <input id={id} type=\"text\" onChange={handleFilter} />\n    </FilterWrapper>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { ContactsFilter } from 'components/ContactsFilter/ContactsFilter';\n\nconst PhonebookPage = () => {\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <ContactsFilter />\n      <ContactsList />\n    </>\n  );\n};\n\nexport default PhonebookPage;\n"],"names":["selectAllContacts","state","phonebook","contacts","items","selectPhonebookLoading","isLoading","selectError","error","selectFilteredOutContacts","filter","contact","name","toLowerCase","includes","FormStyled","styled","Form","ErrorText","Label","Button","id","nanoid","ContactForm","useSelector","phonebookSelectors","dispatch","useDispatch","schema","object","string","required","number","FormError","render","message","initialValues","onSubmit","values","resetForm","some","toast","position","phonebookOperations","validationSchema","htmlFor","type","title","ContactName","ContactPhone","Contact","index","onClick","deleteContact","disabled","Spiner","List","ListItem","ContactsList","isError","filteredOutContacts","useEffect","autoClose","Boolean","length","map","FilterWrapper","inputValue","ContactsFilter","onChange","e","currentTarget","value","findContact"],"sourceRoot":""}