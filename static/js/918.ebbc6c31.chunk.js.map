{"version":3,"file":"static/js/918.ebbc6c31.chunk.js","mappings":"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","sources":["redux/phonebook/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/Contact/Contact.js","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.js","components/ContactsFilter/ContactsFilter.js","pages/PhonebookPage.js"],"sourcesContent":["export const selectAllContacts = state => state.phonebook.contacts.items;\n\nexport const selectFilter = state => state.phonebook.filter;\n\nexport const selectPhonebookLoading = state => state.phonebook.contacts.isLoading;\n\nexport const selectError = state => state.phonebook.contacts.error;\n\nexport const selectFilteredOutContacts = state =>\n  state.phonebook.contacts.items.filter(contact =>\n    contact.name.toLowerCase().includes(state.phonebook.filter.toLowerCase())\n  );\n","import styled from '@emotion/styled';\nimport { Box, TextField } from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\n\nexport const BoxStyled = styled(Box)`\n  display: grid;\n  justify-items: center;\n  margin: auto;\n  padding: 20px;\n`;\n\nexport const Field = styled(TextField)`\n  max-width: 400px;\n`;\n\nexport const Button = styled(LoadingButton)`\n  max-width: 200px;\n`;\n\nexport const FormErrorWrapper = styled.div`\n  height: 20px;\n`;\n\nexport const ErrorText = styled.p`\n  color: red;\n  margin: 0;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Formik, ErrorMessage, Field, Form } from 'formik';\nimport { string, object } from 'yup';\nimport { nanoid } from 'nanoid';\nimport { toast } from 'react-toastify';\nimport { phonebookOperations, phonebookSelectors } from 'redux/phonebook';\nimport SendIcon from '@mui/icons-material/Send';\nimport { Typography } from '@mui/material';\nimport {\n  BoxStyled,\n  FormErrorWrapper,\n  ErrorText,\n  Button,\n} from './ContactForm.styled';\n\nconst id = nanoid();\n\nexport const ContactForm = () => {\n  const contacts = useSelector(phonebookSelectors.selectAllContacts);\n  const isLoading = useSelector(phonebookSelectors.selectPhonebookLoading);\n\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    name: '',\n    number: '',\n  };\n\n  const schema = object({\n    name: string().required(),\n    number: string().required(),\n  });\n\n  const FormError = ({ name }) => {\n    return (\n      <ErrorMessage\n        name={name}\n        render={message => <ErrorText>{message}</ErrorText>}\n      />\n    );\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    const isContactExists = contacts.some(\n      contact => contact.name === values.name\n    );\n\n    isContactExists\n      ? toast.error(`${values.name} is already in contacts`, {\n          position: 'top-center',\n        })\n      : dispatch(phonebookOperations.addContact(values));\n\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        <Form>\n          <BoxStyled>\n            <Typography variant=\"h3\" component=\"h2\" mb=\"20px\">\n              Phonebook\n            </Typography>\n            <Field id={id} name=\"name\" label=\"Name\" variant=\"outlined\" />\n            <FormErrorWrapper>\n              <FormError name=\"name\" />\n            </FormErrorWrapper>\n            <Field\n              id={id}\n              name=\"number\"\n              label=\"Phone\"\n              type=\"tel\"\n              variant=\"outlined\"\n            />\n            <FormErrorWrapper>\n              <FormError name=\"number\" />\n            </FormErrorWrapper>\n            <Button\n              type=\"submit\"\n              endIcon={<SendIcon />}\n              loading={isLoading}\n              loadingPosition=\"end\"\n              variant=\"contained\"\n            >\n              Add contact\n            </Button>\n          </BoxStyled>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/phonebook/operations';\nimport { IconButton } from '@mui/material';\n\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport const Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <ListItemAvatar>\n        <Avatar alt={contact.name} src=\"/\" />\n      </ListItemAvatar>\n      <ListItemText\n        primary={contact.name}\n        secondary={\n          <Typography\n            sx={{ display: 'inline' }}\n            component=\"span\"\n            variant=\"body2\"\n            color=\"text.primary\"\n          >\n            {contact.number}\n          </Typography>\n        }\n      />\n      <IconButton\n        aria-label=\"delete\"\n        size=\"large\"\n        onClick={() => dispatch(deleteContact(contact.id))}\n      >\n        <DeleteIcon fontSize=\"inherit\" />\n      </IconButton>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: inline-flex;\n  flex-direction: column;\n  margin-top: 20px;\n`;\n\nexport const ListItemWripper = styled.div``;\n\nexport const ListItem = styled.li`\n  display: flex;\n  border-bottom: 1px solid;\n`;\n","import { ListItem, List, Divider, Typography } from '@mui/material';\nimport { toast } from 'react-toastify';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { phonebookOperations, phonebookSelectors } from 'redux/phonebook';\nimport { Contact } from 'components/Contact/Contact';\nimport { Spiner } from 'components/Spiner/Spiner';\nimport { ListItemWripper } from './ContactsList.styled';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(phonebookSelectors.selectPhonebookLoading);\n  const isError = useSelector(phonebookSelectors.selectError);\n  const filteredOutContacts = useSelector(\n    phonebookSelectors.selectFilteredOutContacts\n  );\n\n  useEffect(() => {\n    dispatch(phonebookOperations.fetchContacts());\n  }, [dispatch]);\n\n  if (isLoading) {\n    return <Spiner />;\n  }\n\n  if (isError) {\n    return toast.error('Error occurred while fetching contacts', {\n      position: 'top-center',\n      autoClose: 2000,\n    });\n  }\n\n  return (\n    <>\n      <Typography\n        variant=\"h4\"\n        component=\"h2\"\n        color=\"slategray\"\n        textAlign=\"center\"\n      >\n        Contacts\n      </Typography>\n      {filteredOutContacts && (\n        <List sx={{ maxWidth: 500, p: 0, m: 'auto' }}>\n          {Boolean(filteredOutContacts.length === 0) && (\n            <Typography variant=\"h5\" component=\"p\" textAlign=\"center\" mt=\"20px\">\n              No contacts found.\n            </Typography>\n          )}\n          {filteredOutContacts.map((contact, index) => (\n            <ListItemWripper key={contact.id}>\n              <ListItem>\n                <Contact contact={contact} index={index} />\n              </ListItem>\n              <Divider variant=\"inset\" component=\"li\" />\n            </ListItemWripper>\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\n","import { findContact } from 'redux/phonebook/slice';\nimport { useDispatch } from 'react-redux';\nimport { InputAdornment, TextField } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\n\nexport const ContactsFilter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilter = e => {\n    const inputValue = e.currentTarget.value;\n    dispatch(findContact(inputValue));\n  };\n\n  return (\n    <TextField\n      onChange={handleFilter}\n      label=\"Find contacts by name\"\n      id=\"outlined-basic\"\n      variant=\"outlined\"\n      sx={{ m: 1 }}\n      InputProps={{\n        startAdornment: (\n          <InputAdornment position=\"start\">\n            <SearchIcon />\n          </InputAdornment>\n        ),\n      }}\n    />\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { ContactsFilter } from 'components/ContactsFilter/ContactsFilter';\n\nconst PhonebookPage = () => {\n  return (\n    <>\n      <ContactForm />\n      <ContactsFilter />\n      <ContactsList />\n    </>\n  );\n};\n\nexport default PhonebookPage;\n"],"names":["selectAllContacts","state","phonebook","contacts","items","selectPhonebookLoading","isLoading","selectError","error","selectFilteredOutContacts","filter","contact","name","toLowerCase","includes","BoxStyled","styled","Box","Button","TextField","LoadingButton","FormErrorWrapper","ErrorText","id","nanoid","ContactForm","useSelector","phonebookSelectors","dispatch","useDispatch","schema","object","string","required","number","FormError","render","message","initialValues","onSubmit","values","resetForm","some","toast","position","phonebookOperations","validationSchema","Typography","variant","component","mb","label","type","endIcon","Send","loading","loadingPosition","Contact","ListItemAvatar","Avatar","alt","src","ListItemText","primary","secondary","sx","display","color","IconButton","size","onClick","deleteContact","Delete","fontSize","ListItemWripper","ContactsList","isError","filteredOutContacts","useEffect","Spiner","autoClose","textAlign","List","maxWidth","p","m","Boolean","length","mt","map","index","ListItem","Divider","ContactsFilter","onChange","e","inputValue","currentTarget","value","findContact","InputProps","startAdornment","InputAdornment","Search"],"sourceRoot":""}