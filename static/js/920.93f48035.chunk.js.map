{"version":3,"file":"static/js/920.93f48035.chunk.js","mappings":"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","sources":["redux/phonebook/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/Modal/Modal.js","components/ContactsList/ContactsList.js","components/ContactsFilter/ContactsFilter.js","pages/PhonebookPage.js"],"sourcesContent":["export const selectAllContacts = state => state.phonebook.contacts.items;\n\nexport const selectFilter = state => state.phonebook.filter;\n\nexport const selectPhonebookLoading = state => state.phonebook.contacts.isLoading;\n\nexport const selectError = state => state.phonebook.contacts.error;\n\nexport const selectFilteredOutContacts = state =>\n  state.phonebook.contacts.items.filter(contact =>\n    contact.name.toLowerCase().includes(state.phonebook.filter.toLowerCase())\n  );\n","import styled from '@emotion/styled';\n\nexport const FormErrorWrapper = styled.div`\n  height: 20px;\n`;\n\nexport const ErrorText = styled.p`\n  color: red;\n  margin: 0;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Formik, ErrorMessage, Field, Form } from 'formik';\nimport { string, object } from 'yup';\nimport { toast } from 'react-toastify';\nimport { phonebookOperations, phonebookSelectors } from 'redux/phonebook';\nimport SendIcon from '@mui/icons-material/Send';\nimport { Box, Typography } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport { FormErrorWrapper, ErrorText } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(phonebookSelectors.selectAllContacts);\n  const isLoading = useSelector(phonebookSelectors.selectPhonebookLoading);\n\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    name: '',\n    number: '',\n  };\n\n  const schema = object({\n    name: string().required(),\n    number: string().required(),\n  });\n\n  const FormError = ({ name }) => {\n    return (\n      <ErrorMessage\n        name={name}\n        render={message => <ErrorText>{message}</ErrorText>}\n      />\n    );\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    const isContactExists = contacts.some(\n      contact => contact.name === values.name\n    );\n\n    isContactExists\n      ? toast.error(`${values.name} is already in contacts`, {\n          position: 'top-center',\n        })\n      : dispatch(phonebookOperations.addContact(values));\n\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        <Box\n          component={Form}\n          sx={{\n            display: 'grid',\n            justifyItems: 'center',\n            mx: 'auto',\n            my: '30px',\n            padding: '20px',\n          }}\n        >\n          <Typography variant=\"h3\" component=\"h2\" mb=\"20px\">\n            Phonebook\n          </Typography>\n          <Box\n            component={Field}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter a name\"\n            width=\"200px\"\n            sx={{\n              height: '30px',\n              border: '1px solid',\n              borderRadius: '5px',\n              p: 1,\n            }}\n            required\n          />\n          <FormErrorWrapper>\n            <FormError name=\"name\" />\n          </FormErrorWrapper>\n          <Box\n            component={Field}\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"Enter a number\"\n            width=\"200px\"\n            sx={{\n              height: '30px',\n              border: '1px solid',\n              borderRadius: '5px',\n              p: 1,\n            }}\n            required\n          />\n          <FormErrorWrapper>\n            <FormError name=\"number\" />\n          </FormErrorWrapper>\n          <LoadingButton\n            type=\"submit\"\n            endIcon={<SendIcon />}\n            loading={isLoading}\n            loadingPosition=\"end\"\n            variant=\"contained\"\n          >\n            Add contact\n          </LoadingButton>\n        </Box>\n      </Formik>\n    </>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { phonebookOperations } from 'redux/phonebook';\nimport { Button, Dialog, DialogActions, DialogTitle } from '@mui/material';\n\nexport const Modal = ({ id, open, close }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Dialog sx={{ backgroundColor: '#1976d23b' }} open={open} onClose={close}>\n      <DialogTitle>\n        {'Are you sure you want to delete this contact?'}\n      </DialogTitle>\n      <DialogActions>\n        <Button onClick={close}>No</Button>\n        <Button\n          onClick={() => {\n            dispatch(phonebookOperations.deleteContact(id));\n            close();\n          }}\n          autoFocus\n        >\n          Yes\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import { toast } from 'react-toastify';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { phonebookOperations, phonebookSelectors } from 'redux/phonebook';\nimport { Modal } from 'components/Modal/Modal';\nimport { Spiner } from 'components/Spiner/Spiner';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { tableCellClasses } from '@mui/material/TableCell';\nimport TablePaginationActions from '@mui/material/TablePagination/TablePaginationActions';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableFooter,\n  TableRow,\n  Paper,\n  IconButton,\n  TableHead,\n  Typography,\n  TablePagination,\n} from '@mui/material';\nimport styled from '@emotion/styled';\n\nexport const ContactsList = () => {\n  const [open, setOpen] = useState(false);\n  const [elementId, setElementId] = useState(null);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const dispatch = useDispatch();\n  const isLoading = useSelector(phonebookSelectors.selectPhonebookLoading);\n  const isError = useSelector(phonebookSelectors.selectError);\n  const filteredOutContacts = useSelector(\n    phonebookSelectors.selectFilteredOutContacts\n  );\n\n  useEffect(() => {\n    dispatch(phonebookOperations.fetchContacts());\n  }, [dispatch]);\n\n  if (isLoading) {\n    return <Spiner />;\n  }\n\n  if (isError) {\n    return toast.error('Error occurred while fetching contacts', {\n      position: 'top-center',\n      autoClose: 2000,\n    });\n  }\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value));\n    setPage(0);\n  };\n\n  const modalOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const StyledTableCell = styled(TableCell)(({ theme }) => ({\n    [`&.${tableCellClasses.head}`]: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.common.white,\n    },\n  }));\n\n  return (\n    <>\n      {Boolean(filteredOutContacts.length === 0) && (\n        <Typography variant=\"h5\" textAlign=\"center\">\n          No contacts found.\n        </Typography>\n      )}\n      <TableContainer\n        component={Paper}\n        elevation={16}\n        sx={{ width: '70%', mx: 'auto', mb: '30px' }}\n      >\n        <Table stickyHeader size=\"small\">\n          <TableHead sx={{ backgroundColor: '#1976d285' }}>\n            <TableRow>\n              <StyledTableCell>Name</StyledTableCell>\n              <StyledTableCell align=\"right\">Phone</StyledTableCell>\n              <StyledTableCell align=\"right\">Delete</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {(rowsPerPage > 0\n              ? filteredOutContacts.slice(\n                  page * rowsPerPage,\n                  page * rowsPerPage + rowsPerPage\n                )\n              : filteredOutContacts\n            ).map(contact => (\n              <TableRow hover key={contact.id}>\n                <StyledTableCell>{contact.name}</StyledTableCell>\n                <StyledTableCell style={{ MaxWidth: 130 }} align=\"right\">\n                  {contact.number}\n                </StyledTableCell>\n                <StyledTableCell style={{ maxWidth: 100 }} align=\"right\">\n                  <IconButton\n                    aria-label=\"delete\"\n                    size=\"medium\"\n                    onClick={() => {\n                      modalOpen();\n                      setElementId(contact.id);\n                    }}\n                  >\n                    <DeleteIcon fontSize=\"inherit\" />\n                  </IconButton>\n                </StyledTableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                colSpan={3}\n                count={filteredOutContacts.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: {\n                    'aria-label': 'rows per page',\n                  },\n                  native: true,\n                }}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </TableContainer>\n      <Modal id={elementId} open={open} close={handleClose} />\n    </>\n  );\n};\n","import { findContact } from 'redux/phonebook/slice';\nimport { useDispatch } from 'react-redux';\nimport { InputAdornment, TextField } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\n\nexport const ContactsFilter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilter = e => {\n    const inputValue = e.currentTarget.value;\n    dispatch(findContact(inputValue));\n  };\n\n  return (\n    <TextField\n      onChange={handleFilter}\n      label=\"Find contacts by name\"\n      id=\"outlined-basic\"\n      variant=\"outlined\"\n      sx={{ mx: 'auto', mb: '30px', display: 'flex', width: '50%' }}\n      InputProps={{\n        startAdornment: (\n          <InputAdornment position=\"start\">\n            <SearchIcon />\n          </InputAdornment>\n        ),\n      }}\n    />\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { ContactsFilter } from 'components/ContactsFilter/ContactsFilter';\n\nconst PhonebookPage = () => {\n  return (\n    <>\n      <ContactForm />\n      <ContactsFilter />\n      <ContactsList />\n    </>\n  );\n};\n\nexport default PhonebookPage;\n"],"names":["selectAllContacts","state","phonebook","contacts","items","selectPhonebookLoading","isLoading","selectError","error","selectFilteredOutContacts","filter","contact","name","toLowerCase","includes","FormErrorWrapper","styled","ErrorText","ContactForm","useSelector","phonebookSelectors","dispatch","useDispatch","schema","object","string","required","number","FormError","render","message","initialValues","onSubmit","values","resetForm","some","toast","position","phonebookOperations","validationSchema","Box","component","Form","sx","display","justifyItems","mx","my","padding","Typography","variant","mb","Field","type","placeholder","width","height","border","borderRadius","p","LoadingButton","endIcon","Send","loading","loadingPosition","Modal","id","open","close","Dialog","backgroundColor","onClose","DialogTitle","DialogActions","Button","onClick","autoFocus","ContactsList","useState","setOpen","elementId","setElementId","page","setPage","rowsPerPage","setRowsPerPage","isError","filteredOutContacts","useEffect","Spiner","autoClose","StyledTableCell","TableCell","theme","tableCellClasses","palette","primary","main","color","common","white","Boolean","length","textAlign","TableContainer","Paper","elevation","Table","stickyHeader","size","TableHead","TableRow","align","TableBody","slice","map","hover","style","MaxWidth","maxWidth","IconButton","Delete","fontSize","TableFooter","TablePagination","rowsPerPageOptions","label","value","colSpan","count","SelectProps","inputProps","native","onPageChange","event","newPage","onRowsPerPageChange","parseInt","target","ActionsComponent","TablePaginationActions","ContactsFilter","TextField","onChange","e","inputValue","currentTarget","findContact","InputProps","startAdornment","InputAdornment","Search"],"sourceRoot":""}