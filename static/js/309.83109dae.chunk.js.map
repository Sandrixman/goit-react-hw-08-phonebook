{"version":3,"file":"static/js/309.83109dae.chunk.js","mappings":"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","sources":["redux/phonebook/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","components/ContactsFilter/ContactsFilter.js","pages/PhonebookPage.js"],"sourcesContent":["export const selectAllContacts = state => state.phonebook.contacts.items;\n\nexport const selectFilter = state => state.phonebook.filter;\n\nexport const selectPhonebookLoading = state => state.phonebook.contacts.isLoading;\n\nexport const selectError = state => state.phonebook.contacts.error;\n\nexport const selectFilteredOutContacts = state =>\n  state.phonebook.contacts.items.filter(contact =>\n    contact.name.toLowerCase().includes(state.phonebook.filter.toLowerCase())\n  );\n","import styled from '@emotion/styled';\nimport { Box, TextField } from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\n\nexport const BoxStyled = styled(Box)`\n  display: grid;\n  justify-items: center;\n  margin: auto;\n  padding: 20px;\n`;\n\nexport const Field = styled(TextField)`\n  max-width: 400px;\n`;\n\nexport const Button = styled(LoadingButton)`\n  max-width: 200px;\n`;\n\nexport const FormErrorWrapper = styled.div`\n  height: 20px;\n`;\n\nexport const ErrorText = styled.p`\n  color: red;\n  margin: 0;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Formik, ErrorMessage, Field, Form } from 'formik';\nimport { string, object } from 'yup';\nimport { nanoid } from 'nanoid';\nimport { toast } from 'react-toastify';\nimport { phonebookOperations, phonebookSelectors } from 'redux/phonebook';\nimport SendIcon from '@mui/icons-material/Send';\nimport { Typography } from '@mui/material';\nimport {\n  BoxStyled,\n  FormErrorWrapper,\n  ErrorText,\n  Button,\n} from './ContactForm.styled';\n\nconst id = nanoid();\n\nexport const ContactForm = () => {\n  const contacts = useSelector(phonebookSelectors.selectAllContacts);\n  const isLoading = useSelector(phonebookSelectors.selectPhonebookLoading);\n\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    name: '',\n    number: '',\n  };\n\n  const schema = object({\n    name: string().required(),\n    number: string().required(),\n  });\n\n  const FormError = ({ name }) => {\n    return (\n      <ErrorMessage\n        name={name}\n        render={message => <ErrorText>{message}</ErrorText>}\n      />\n    );\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    const isContactExists = contacts.some(\n      contact => contact.name === values.name\n    );\n\n    isContactExists\n      ? toast.error(`${values.name} is already in contacts`, {\n          position: 'top-center',\n        })\n      : dispatch(phonebookOperations.addContact(values));\n\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        <Form>\n          <BoxStyled>\n            <Typography variant=\"h3\" component=\"h2\" mb=\"20px\">\n              Phonebook\n            </Typography>\n            <Field id={id} name=\"name\" label=\"Name\" variant=\"outlined\" />\n            <FormErrorWrapper>\n              <FormError name=\"name\" />\n            </FormErrorWrapper>\n            <Field\n              id={id}\n              name=\"number\"\n              label=\"Phone\"\n              type=\"tel\"\n              variant=\"outlined\"\n            />\n            <FormErrorWrapper>\n              <FormError name=\"number\" />\n            </FormErrorWrapper>\n            <Button\n              type=\"submit\"\n              endIcon={<SendIcon />}\n              loading={isLoading}\n              loadingPosition=\"end\"\n              variant=\"contained\"\n            >\n              Add contact\n            </Button>\n          </BoxStyled>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n","import { toast } from 'react-toastify';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { phonebookOperations, phonebookSelectors } from 'redux/phonebook';\nimport { Spiner } from 'components/Spiner/Spiner';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableFooter,\n  TableRow,\n  Paper,\n  IconButton,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  TableHead,\n  Typography,\n  TablePagination,\n} from '@mui/material';\nimport TablePaginationActions from '@mui/material/TablePagination/TablePaginationActions';\n\nexport const ContactsList = () => {\n  const [open, setOpen] = useState(false);\n  const [elementId, setElementId] = useState(null);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const dispatch = useDispatch();\n  const isLoading = useSelector(phonebookSelectors.selectPhonebookLoading);\n  const isError = useSelector(phonebookSelectors.selectError);\n  const filteredOutContacts = useSelector(\n    phonebookSelectors.selectFilteredOutContacts\n  );\n\n  useEffect(() => {\n    dispatch(phonebookOperations.fetchContacts());\n  }, [dispatch]);\n\n  if (isLoading) {\n    return <Spiner />;\n  }\n\n  if (isError) {\n    return toast.error('Error occurred while fetching contacts', {\n      position: 'top-center',\n      autoClose: 2000,\n    });\n  }\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value));\n    setPage(0);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      {Boolean(filteredOutContacts.length === 0) && (\n        <Typography variant=\"h5\" textAlign=\"center\">\n          No contacts found.\n        </Typography>\n      )}\n      <TableContainer\n        component={Paper}\n        elevation={9}\n        sx={{ width: '80%', m: 'auto' }}\n      >\n        <Table aria-label=\"custom pagination table\">\n          <TableHead sx={{ backgroundColor: '#1976d285' }}>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell align=\"right\">Phone</TableCell>\n              <TableCell align=\"right\">Delete</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {(rowsPerPage > 0\n              ? filteredOutContacts.slice(\n                  page * rowsPerPage,\n                  page * rowsPerPage + rowsPerPage\n                )\n              : filteredOutContacts\n            ).map(contact => (\n              <TableRow hover key={contact.id}>\n                <TableCell>{contact.name}</TableCell>\n                <TableCell style={{ MaxWidth: 130 }} align=\"right\">\n                  {contact.number}\n                </TableCell>\n                <TableCell style={{ maxWidth: 100 }} align=\"right\">\n                  <IconButton\n                    aria-label=\"delete\"\n                    size=\"medium\"\n                    onClick={() => {\n                      handleClickOpen();\n                      setElementId(contact.id);\n                    }}\n                  >\n                    <DeleteIcon fontSize=\"inherit\" />\n                  </IconButton>\n                  <Dialog\n                    sx={{ backgroundColor: '#1976d285' }}\n                    open={open}\n                    onClose={handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                  >\n                    <DialogTitle id=\"alert-dialog-title\">\n                      {'Are you sure you want to delete this contact?'}\n                    </DialogTitle>\n                    <DialogActions>\n                      <Button onClick={handleClose}>No</Button>\n                      <Button\n                        onClick={() => {\n                          dispatch(\n                            phonebookOperations.deleteContact(elementId)\n                          );\n                          handleClose();\n                        }}\n                        autoFocus\n                      >\n                        Yes\n                      </Button>\n                    </DialogActions>\n                  </Dialog>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                colSpan={3}\n                count={filteredOutContacts.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: {\n                    'aria-label': 'rows per page',\n                  },\n                  native: true,\n                }}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </TableContainer>\n    </>\n  );\n};\n","import { findContact } from 'redux/phonebook/slice';\nimport { useDispatch } from 'react-redux';\nimport { InputAdornment, TextField } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\n\nexport const ContactsFilter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilter = e => {\n    const inputValue = e.currentTarget.value;\n    dispatch(findContact(inputValue));\n  };\n\n  return (\n    <TextField\n      onChange={handleFilter}\n      label=\"Find contacts by name\"\n      id=\"outlined-basic\"\n      variant=\"outlined\"\n      sx={{ mx: 'auto', mb: '30px', display: 'flex', width: '50%' }}\n      InputProps={{\n        startAdornment: (\n          <InputAdornment position=\"start\">\n            <SearchIcon />\n          </InputAdornment>\n        ),\n      }}\n    />\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { ContactsFilter } from 'components/ContactsFilter/ContactsFilter';\n\nconst PhonebookPage = () => {\n  return (\n    <>\n      <ContactForm />\n      <ContactsFilter />\n      <ContactsList />\n    </>\n  );\n};\n\nexport default PhonebookPage;\n"],"names":["selectAllContacts","state","phonebook","contacts","items","selectPhonebookLoading","isLoading","selectError","error","selectFilteredOutContacts","filter","contact","name","toLowerCase","includes","BoxStyled","styled","Box","Button","TextField","LoadingButton","FormErrorWrapper","ErrorText","id","nanoid","ContactForm","useSelector","phonebookSelectors","dispatch","useDispatch","schema","object","string","required","number","FormError","render","message","initialValues","onSubmit","values","resetForm","some","toast","position","phonebookOperations","validationSchema","Typography","variant","component","mb","label","type","endIcon","Send","loading","loadingPosition","ContactsList","useState","open","setOpen","elementId","setElementId","page","setPage","rowsPerPage","setRowsPerPage","isError","filteredOutContacts","useEffect","Spiner","autoClose","handleClose","Boolean","length","textAlign","TableContainer","Paper","elevation","sx","width","m","Table","TableHead","backgroundColor","TableRow","TableCell","align","TableBody","slice","map","hover","style","MaxWidth","maxWidth","IconButton","size","onClick","Delete","fontSize","Dialog","onClose","DialogTitle","DialogActions","autoFocus","TableFooter","TablePagination","rowsPerPageOptions","value","colSpan","count","SelectProps","inputProps","native","onPageChange","event","newPage","onRowsPerPageChange","parseInt","target","ActionsComponent","TablePaginationActions","ContactsFilter","onChange","e","inputValue","currentTarget","findContact","mx","display","InputProps","startAdornment","InputAdornment","Search"],"sourceRoot":""}